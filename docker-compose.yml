version: '3.8'

services:
  # Backend real con ML y Azure
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - AZURE_FACE_KEY=${AZURE_FACE_KEY}
      - AZURE_FACE_ENDPOINT=${AZURE_FACE_ENDPOINT}
      - AZURE_SPEECH_KEY=${AZURE_SPEECH_KEY}
      - AZURE_SERVICE_REGION=${AZURE_SERVICE_REGION}
      - STT_SERVICE=${STT_SERVICE:-azure}
    volumes:
      - ./backend:/app
      - ./backend/models:/app/models
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - jarvis-network

  # Frontend React
  frontend:
    build:
      context: ./frontend-react
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend-react:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_USE_MOCK=false
      - VITE_MOCK_API_URL=http://localhost:3001
    networks:
      - jarvis-network
    depends_on:
      - backend
      - mock-server

  # Mock Server para desarrollo/testing
  mock-server:
    build:
      context: ./mock-server
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - ./mock-server:/app
      - /app/node_modules
    networks:
      - jarvis-network
    command: npm start

  # Base de datos stub (PostgreSQL para futuras features)
  db-stub:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=jarvis
      - POSTGRES_PASSWORD=jarvis123
      - POSTGRES_DB=jarvis_db
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - jarvis-network

networks:
  jarvis-network:
    driver: bridge

volumes:
  db-data:

